version: "3"

dotenv: ['.env']

tasks:
  default:
    cmds:
      - task: up

  up:
    preconditions:
      - sh: '[ -n "$OPENAI_API_KEY" ] && [ -n "$GITHUB_TOKEN" ]'
        msg: "Both OPENAI_API_KEY and GITHUB_TOKEN must be set and non-empty"
    desc: Start the demo Compose Stack
    cmd: docker compose up --build

  down:
    desc: Stop the demo Compose Stack
    cmd: docker compose down --remove-orphans

  build-compose:
    desc: Build docker-compose from the source
    cmds:
      - cmd: docker buildx build --target=binary-darwin --platform=darwin/arm64 --output type=local,dest=./bin https://github.com/fiam/compose.git#alberto/plugin-output
        platforms: [darwin]
      - cmd: ln -sf "{{.TASKFILE_DIR}}/bin/docker-compose" "{{.HOME}}/.docker/cli-plugins/"
        platforms: [darwin]
      - cmd: docker buildx build --target=binary-windows --platform=windows/amd64 --output type=local,dest=./bin https://github.com/fiam/compose.git#alberto/plugin-output
        platforms: [windows]
      - cmd: mkdir -p "{{.USERPROFILE}}/.docker/cli-plugins"
        platforms: [windows]
      - cmd: ln -sf "{{.TASKFILE_DIR}}/bin/docker-compose.exe" "{{.USERPROFILE}}/.docker/cli-plugins/"
        platforms: [windows]

  build-docker-mcpgateway:
    desc: Build the docker-mcpgateway binary
    cmd: go build -o bin/docker-mcpgateway ./cmd/docker-mcpgateway

  build-gateway-image:
    desc: Build the gateway docker image
    cmd: docker buildx bake --file docker-bake.hcl gateway

  build-agents-runner-image:
    desc: Build the agent runner image
    cmd: docker buildx bake --file docker-bake.hcl agents-runner

  build-agents-ui-image:
    desc: Build the agent UI image
    cmd: docker buildx bake --file docker-bake.hcl agents-ui

  build-images:
    desc: Build all docker images
    cmd: docker buildx bake --file docker-bake.hcl

  push-gateway-image:
    desc: Build and push the gateway docker image
    cmd: docker buildx bake --file docker-bake.hcl --sbom="generator=docker/scout-sbom-indexer:1" --provenance=mode=max --set='*.platform=linux/arm64,linux/amd64' --push gateway

  build:
    desc: Build all binaries and images
    deps:
      - build-images
      - build-docker-mcpgateway

  install-docker-mcpgateway:
    desc: Install the docker-mcpgateway binary
    cmds:
      - cmd: ln -sf "{{.TASKFILE_DIR}}/bin/docker-mcpgateway" "{{.HOME}}/.docker/cli-plugins/"
        platforms: [darwin]
      - cmd: ln -sf "{{.TASKFILE_DIR}}/bin/docker-mcpgateway.exe" "{{.USERPROFILE}}/.docker/cli-plugins/"
        platforms: [windows]
    deps:
      - build-docker-mcpgateway

  install:
    desc: Install all binaries
    deps:
      - build-compose
      - build # To build images too
      - install-docker-mcpgateway
