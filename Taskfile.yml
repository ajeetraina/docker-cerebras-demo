version: "3"

dotenv: ['.env']

tasks:
  default:
    cmds:
      - task: up

  up:
    preconditions:
      - sh: '[ -n "$OPENAI_API_KEY" ] && [ -n "$GITHUB_TOKEN" ]'
        msg: "Both OPENAI_API_KEY and GITHUB_TOKEN must be set and non-empty"
    desc: Start the demo Compose Stack
    cmd: docker compose up --build

  down:
    desc: Stop the demo Compose Stack
    cmd: docker compose down --remove-orphans

  build-compose:
    desc: Build docker-compose from the source
    cmds:
      - docker buildx build --target=binary-darwin --platform=darwin/arm64 --output type=local,dest=./bin https://github.com/fiam/compose.git#alberto/plugin-output
      - /bin/ln -sf "{{.TASKFILE_DIR}}/bin/docker-compose" "{{.HOME}}/.docker/cli-plugins/docker-compose"

  build-docker-agentic:
    desc: Build the docker-agentic binary
    cmd: go build -o bin/docker-agentic ./cmd/docker-agentic

  build-docker-mcpgateway:
    desc: Build the docker-mcpgateway binary
    cmd: go build -o bin/docker-mcpgateway ./cmd/docker-mcpgateway

  build-gateway-image:
    desc: Build the gateway docker image
    cmd: docker buildx bake gateway

  build-agents-runner-image:
    desc: Build the agent runner image
    cmd: docker buildx bake agents-runner

  build-agents-ui-image:
    desc: Build the agent UI image
    cmd: docker buildx bake agents-ui

  build-images:
    desc: Build all docker images
    cmd: docker buildx bake

  build-push-gateway-image:
    desc: Build and push the gateway docker image
    cmd: docker buildx bake --set '*.attest=type=sbom' --set '*.attest=type=provenance,mode=max' --set '*.platform=linux/arm64,linux/amd64' --push gateway

  build:
    desc: Build all binaries and images
    deps:
      - build-images
      - build-docker-agentic
      - build-docker-mcpgateway

  install-docker-agentic:
    desc: Install the docker-agentic binary
    cmd: /bin/ln -sf "{{.TASKFILE_DIR}}/bin/docker-agentic" "{{.HOME}}/.docker/cli-plugins/docker-agentic"
    deps:
      - build-docker-agentic

  install-docker-mcpgateway:
    desc: Install the docker-mcpgateway binary
    cmd: /bin/ln -sf "{{.TASKFILE_DIR}}/bin/docker-mcpgateway" "{{.HOME}}/.docker/cli-plugins/docker-mcpgateway"
    deps:
      - build-docker-mcpgateway

  install:
    desc: Install all binaries
    deps:
      - build # To build images too
      - install-docker-agentic
      - install-docker-mcpgateway

  uninstall:
    desc: Remove all installed files
    cmds:
      - /bin/rm -f "{{.HOME}}/.docker/cli-plugins/docker-agentic"
      - /bin/rm -f "{{.HOME}}/.docker/cli-plugins/docker-mcpgateway"
