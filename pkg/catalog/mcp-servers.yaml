- name: 302_sandbox
  image: mcp/302_sandbox@sha256:360407a82b6077f065c883bc7cc1ffc7f2f8da298835530eb9b945dc37d7d823
  run:
    workdir: /app
  config:
    secrets:
      - id: 302_sandbox.api_key
        name: 302AI_API_KEY
        value: YOUR_API_KEY_HERE

- name: armor-crypto
  image: mcp/armor-crypto@sha256:b4e828c3810a84b9d5b9d168d4ec2192166e0457e882788ff897de5e3ba147da
  run:
    workdir: /app
  config:
    description: Configure the connection to Armor
    secrets:
      - id: armor-crypto.api_key
        name: ARMOR_API_KEY
        value: <PUT-YOUR-KEY-HERE>
    env:
      - name: ARMOR_API_URL
        default: https://app.armorwallet.ai/api/v1
        expression: '{{armor-crypto.api_url|safe}}'
    parameters:
      type: object
      properties:
        api_url:
          type: string

- name: astra-db
  image: mcp/astra-db@sha256:71746dcd55c3530bacc0680cea2b395d23e96e9c9f1a540e9fdebcfd0c806650
  run:
    workdir: /app
  config:
    description: Configure the connection to Astra DB
    secrets:
      - id: astra-db.applicatin_token
        name: ASTRA_DB_APPLICATION_TOKEN
        value: your_astra_db_token
    env:
      - name: ASTRA_DB_API_ENDPOINT
        default: ""
        expression: '{{astra-db.endpoint|safe}}'
    parameters:
      type: object
      properties:
        endpoint:
          type: string

- name: atlas-docs
  image: mcp/atlas-docs@sha256:d32f8f48846a638d2db2d931d28bcf7c32fc09c96e4ed6fd82ee1905b7f26b89
  run:
    workdir: /app
  config:
    description: Configure the connection to Atlas Docs
    env:
      - name: ATLAS_API_URL
        default: https://atlas.cartograph.app/api
        expression: '{{atlas-docs.api_url|safe}}'
    parameters:
      type: object
      properties:
        api_url:
          type: string

- name: atlassian
  image: mcp/atlassian@sha256:ec796eadadb26f020de846835ade7bfb05b4926579aabb490d62b7ee3e09c42c
  run:
    workdir: /app
  config:
    description: The MCP server is allowed to access these paths
    secrets:
      - id: atlassian.confluence.api_token
        name: CONFLUENCE_API_TOKEN
        value: your_api_token
      - id: atlassian.confluence.personal_token
        name: CONFLUENCE_PERSONAL_TOKEN
        value: your_api_token
      - id: atlassian.jira.api_token
        name: JIRA_API_TOKEN
        value: your_api_token
      - id: atlassian.jira.personal_token
        name: JIRA_PERSONAL_TOKEN
        value: your_api_token
    env:
      - name: CONFLUENCE_URL
        default: https://your-company.atlassian.net/wiki"
        expression: '{{atlassian.confluence.url}}'
      - name: CONFLUENCE_USERNAME
        default: your.email@company.com
        expression: '{{atlassian.confluence.username}}'
      - name: JIRA_URL
        default: https://your-company.atlassian.net
        expression: '{{atlassian.jira.url}}'
      - name: JIRA_USERNAME
        default: your.email@company.com
        expression: '{{atlassian.jira.username}}'
    parameters:
      type: object
      properties:
        confluence:
          type: object
          properties:
            url:
              type: string
            username:
              type: string
          required:
            - url
        jira:
          type: object
          properties:
            url:
              type: string
            username:
              type: string
          required:
            - url
      anyOf:
        - required:
            - confluence
        - required:
            - jira

- name: audiense-insights
  image: mcp/audiense-insights@sha256:ef87e7db0dd2b97ae6c05e819080797831eee8fbf756e4d20e8efd3673e4936e
  run:
    workdir: /app
  config:
    description: Configure the connection to Audiense Insights
    secrets:
      - id: audiense-insights.client_secret
        name: AUDIENSE_CLIENT_SECRET
        value: your_client_secret_here
      - id: audiense-insights.twitter_bearer_token
        name: TWITTER_BEARER_TOKEN
        value: your_token_here
    env:
      - name: AUDIENSE_CLIENT_ID
        default: your_client_id_here
        expression: '{{audiense-insights.client_id}}'
    parameters:
      type: object
      properties:
        client_id:
          type: string
      required:
        - client_id

- name: aws-cdk-mcp-server
  image: mcp/aws-cdk-mcp-server@sha256:dff4a41f6a395bd47e8735d2f4810b71b2a73e475a3b94d6bed56647175fa8d1
  run:
    workdir: /var/task

- name: aws-core-mcp-server
  image: mcp/aws-core-mcp-server@sha256:454457b7346d871198ed46929bd148590639711ccc0e15b2b8c7d0448afbcc6e
  run:
    workdir: /var/task

- name: aws-diagram
  image: mcp/aws-diagram@sha256:294829f0902371a64efa645fd23589011f13eec37be7baf1075f2b3d0125960a
  run:
    workdir: /var/task

- name: aws-documentation
  image: mcp/aws-documentation@sha256:507c19338dee579039b87fcd736afa6e5b4defb61cdde6721856d04ea24073a3
  run:
    workdir: /var/task

- name: aws-kb-retrieval-server
  image: mcp/aws-kb-retrieval-server@sha256:580667f112638b55caa18412457c1ea2f8f70ff588ffae45f93841c8da2cccfa
  run:
    workdir: /app
  config:
    description: Configure the connection to AWS
    secrets:
      - id: aws.secret_access_key
        name: AWS_SECRET_ACCESS_KEY
        value: YOUR_SECRET_ACCESS_KEY_HERE
    env:
      - name: AWS_ACCESS_KEY_ID
        default: YOUR_ACCESS_KEY_HERE
        expression: '{{aws-kb-retrieval-server.access_key_id}}'
    parameters:
      type: object
      properties:
        access_key_id:
          type: string
      required:
        - access_key_id

- name: azure
  image: mcp/azure@sha256:f9a3c1625a199d483d0404642271f80603326290734840dd5da1de0ad3bffdb4
  run:
    workdir: /app
    command:
      - server
      - start

- name: bitrefill
  image: mcp/bitrefill@sha256:9a9352030e73cf2be3201c10bbb332abac6803024a14aa8c6f3f2b59b0bdb58c
  run:
    workdir: /app
  config:
    description: Configure the connection to Bitrefill
    secrets:
      - id: bitrefill.api_secret
        name: BITREFILL_API_SECRET
        value: your_api_key_here
    env:
      - name: BITREFILL_API_ID
        default: your_api_id_here
        expression: '{{bitrefill.api_id}}'
    parameters:
      type: object
      properties:
        api_id:
          type: string
      required:
        - api_id

- name: box
  image: mcp/box@sha256:da8270541c3231d9c084de08721b1e40a9a594b777a3c8fc4d125c6f18c9c44e
  run:
    workdir: /app
  config:
    description: Configure the connection to Box
    secrets:
      - id: box.client_secret
        name: BOX_CLIENT_SECRET
        value: your_client_secret
    env:
      - name: BOX_CLIENT_ID
        default: your_client_id
        expression: '{{box.client_id}}'
    parameters:
      type: object
      properties:
        client_id:
          type: string
      required:
        - client_id

- name: brave
  image: mcp/brave-search@sha256:843468bdda6da6bf6cb8d57cf0fb786a24642c487ff3a67d7dab1d212e4cde27
  run:
    workdir: /app
  config:
    secrets:
      - id: brave.api_key
        name: BRAVE_API_KEY
        value: YOUR_API_KEY_HERE

- name: cdata-connectcloud
  image: mcp/cdata-connectcloud@sha256:e17ff34ae269fab6dc655a97cfe3e1d26cc47f05054a1cecb010fccaf2405bda
  run:
    workdir: /app
  config:
    description: Configure the connection to CData Connect Cloud
    secrets:
      - id: cdata.pat
        name: CDATA_PAT
        value: <your-cdata-pat>
    env:
      - name: CDATA_USERNAME
        default: <your-cdata-username>
        expression: '{{cdata-connectcloud.username}}'
    parameters:
      type: object
      properties:
        client_id:
          type: string
      required:
        - username

- name: chroma
  image: mcp/chroma@sha256:a14e76e6d401ff9d08984635c9330e54281fdae44f098df073be47db272fc456
  run:
    workdir: /app
  config:
    secrets:
      - id: chroma.api_key
        name: CHROMA_API_KEY
        value: your-api-key

- name: circleci
  image: mcp/circleci@sha256:1a0ff64bf9745dd824a7edc7eecf63b07a113f931226cf47878bc292ad97a253
  run:
    workdir: /app
  config:
    description: Configure the connection to CircleCI
    secrets:
      - id: circleci.token
        name: CIRCLECI_TOKEN
        value: your-circleci-token
    env:
      - name: CIRCLECI_BASE_URL
        default: https://circleci.com
        expression: '{{circleci.url|safe}}'
    parameters:
      type: object
      properties:
        url:
          type: string

- name: context7
  image: mcp/context7@sha256:4332cec47fb82d09cc0240231b2ff2f48de9f3d019e918751ebf96285e40a28f
  run:
    workdir: /app

- name: cyreslab-ai-shodan
  image: mcp/cyreslab-ai-shodan@sha256:8b384a095df2ec66665f521259a28d73e947369d1aede94a447345a8ef6be774
  run:
    workdir: /app
  config:
    secrets:
      - id: cyreslab-ai-shodan.api_key
        name: SHODAN_API_KEY
        value: YOUR_SHODAN_API_KEY

- name: dappier
  image: mcp/dappier@sha256:9a9d720f4f2c23da16c548033aa4925cc7d1f55028c1f553c8284c9c3071fd7e
  run:
    workdir: /app
  config:
    secrets:
      - id: dappier.api_key
        name: DAPPIER_API_KEY
        value: YOUR_API_KEY_HERE

- name: dart
  image: mcp/dart@sha256:38a8e3da9d22a6a7959fb8216272de94f9561f886d88c125c1b789659d08a748
  run:
    workdir: /app
  config:
    description: Configure the connection to Dart
    secrets:
      - id: dart.token
        name: DART_TOKEN
        value: dsa_...
    env:
      - name: DART_HOST
        default: https://app.itsdart.com
        expression: '{{dart.host|safe}}'
    parameters:
      type: object
      properties:
        host:
          type: string

- name: databutton
  image: mcp/databutton@sha256:9a33e9c71d7af51567a4572ade59ddb211ddd4df9239fd34d5cd0da1dd5f1c9f
  run:
    workdir: /app

- name: descope
  image: mcp/descope@sha256:ea46e1f91b3441f21e418ccded2d7d242281babe8ea9118aa9e068a4286981a2
  run:
    workdir: /usr/src/app
  config:
    description: Configure the connection to Descope
    secrets:
      - id: descope.management_key
        name: DESCOPE_MANAGEMENT_KEY
        value: your-descope-management-key-here
    env:
      - name: DESCOPE_PROJECT_ID
        default: your-descope-project-id-here
        expression: '{{descope.project_id}}'
    parameters:
      type: object
      properties:
        project_id:
          type: string
      required:
        - project_id

- name: desktop-commander
  image: mcp/desktop-commander@sha256:4b3ae11216ed60d7c9c580ba093a858cf0d6b6c8cf266487ab968e0556c665cc
  run:
    workdir: /usr/src/app

- name: devhub-cms
  image: mcp/devhub-cms@sha256:3795b33841deb55a839a27f573cbe05b145dba01a893df022bc2ad243b26a9b5
  run:
    workdir: /app
  config:
    description: Configure the connection to DevHub CMS
    secrets:
      - id: devhub-cms.api_key
        name: DEVHUB_API_KEY
        value: YOUR_KEY_HERE
      - id: devhub-cms.api_secret
        name: DEVHUB_API_SECRET
        value: YOUR_SECRET_HERE
    env:
      - name: DEVHUB_BASE_URL
        default: https://yourbrand.cloudfrontend.net
        expression: '{{devhub-cms.url|safe}}'
    parameters:
      type: object
      properties:
        url:
          type: string
      required:
        - url

- name: duckduckgo
  image: mcp/duckduckgo@sha256:2aa033e58fe9e41d71ba4eaf9957c3dbf56224fa25dd769f1692b05771c73ac9
  run:
    workdir: /app

- name: e2b
  image: mcp/e2b@sha256:c295fc46ab5d0c4da36b47cd1db9dab4cf34099a64761a761aa0cdd8ce094ce1
  run:
    workdir: /app
  config:
    secrets:
      - id: e2b.api_key
        name: E2B_API_KEY
        value: YOUR_API_KEY_HERE

- name: edubase
  image: mcp/edubase@sha256:0ccf862315268fd0d553231d3bb377db2a0587daace88c4ce4f712df3670dd43
  run:
    workdir: /app
  config:
    description: Configure the connection to EduBase
    secrets:
      - id: edubase.api_key
        name: EDUBASE_API_KEY
        value: YOUR_EDUBASE_API_KEY
    env:
      - name: EDUBASE_API_APP
        default: YOUR_EDUBASE_API_APP
        expression: '{{edubase.app}}'
      - name: EDUBASE_API_URL
        default: YOUR_EDUBASE_API_URL
        expression: '{{edubase.url|safe}}'
    parameters:
      type: object
      properties:
        app:
          type: string
        url:
          type: string
      required:
        - app
        - url

- name: elasticsearch
  image: mcp/elasticsearch@sha256:9dd32996e75c028d86ecb9a0db1773e4507f5f8ebd2bd1eabe589d107bec6379
  run:
    workdir: /app
  config:
    description: Configure the connection to Elasticsearch
    secrets:
      - id: elasticsearch.api_key
        name: ES_API_KEY
        value: your-api-key
    env:
      - name: ES_URL
        default: http://localhost:9200
        expression: '{{elasticsearch.url|safe}}'
    parameters:
      type: object
      properties:
        url:
          type: string
      required:
        - url

- name: elevenlabs
  image: mcp/elevenlabs@sha256:ea82f9dd3f90412de6372cf3cf688377cba8e1db652225279417f95be0147f4d
  run:
    workdir: /app
  config:
    secrets:
      - id: elevenlabs.api_key
        name: ELEVENLABS_API_KEY
        value: <insert-your-api-key-here>

- name: everart
  image: mcp/everart@sha256:bad2892c8893fd488224701a449f932bf68a8485e811d8f91ca964312b43acc9
  run:
    workdir: /app
  config:
    secrets:
      - id: everart.api_key
        name: EVERART_API_KEY
        value: your_key_here

- name: exa
  image: mcp/exa@sha256:f67fd2c62b9689905658a8738a3628a1c75907e5739c22d444d9cfc604b328ae
  run:
    workdir: /app
  config:
    secrets:
      - id: exa.api_key
        name: EXA_API_KEY
        value: your-api-key-here

- name: fetch
  image: mcp/fetch@sha256:a2a12ad15957d35a688abe7f8f2543db8a5bbe56b8961bb66767bbacd0f7ebf7
  run:
    workdir: /app

- name: fibery
  image: mcp/fibery@sha256:9ef36dc4577cb96de25eee283a0c66959b8cea78c922e869ba84d0f42e5f5956
  run:
    workdir: /app
  config:
    description: Configure the connection to Fibery
    secrets:
      - id: fibery.api_token
        name: FIBERY_API_TOKEN
        value: your-api-token
    env:
      - name: FIBERY_HOST
        default: your-domain.fibery.io
        expression: '{{fibery.host|safe}}'

- name: filesystem
  image: mcp/filesystem@sha256:4a103f59812b52320aeaaa5ac6ab8613cef36cd9128da8fff08dbb20018e4feb
  run:
    workdir: /app
    command:
      - '{{filesystem.paths|volume-target|into}}'
    volumes:
      - '{{filesystem.paths|volume|into}}'
  config:
    description: The MCP server is allowed to access these paths
    parameters:
      type: object
      properties:
        paths:
          type: array
          items:
            type: string
          default:
            - /Users/local-test
      required:
        - paths

- name: firecrawl
  image: mcp/firecrawl@sha256:9fcad4cb8594fcf2fb95df86ded9918d05ed883bd987cf75ac066a806b072b8a
  run:
    workdir: /app
  config:
    description: Configure the connection to Firecrawl
    secrets:
      - id: firecrawl.api_key
        name: FIRECRAWL_API_KEY
        value: YOUR-API-KEY
    env:
      - name: FIRECRAWL_API_URL
        default: https://api.firecrawl.dev/v1
        expression: '{{firecrawl.url|safe}}'
      - name: FIRECRAWL_RETRY_MAX_ATTEMPTS
        default: 5
        expression: '{{firecrawl.retry_max}}'
      - name: FIRECRAWL_RETRY_INITIAL_DELAY
        default: 2000
        expression: '{{firecrawl.retry_delay}}'
      - name: FIRECRAWL_RETRY_MAX_DELAY
        default: 30000
        expression: '{{firecrawl.retry_max_delay}}'
      - name: FIRECRAWL_RETRY_BACKOFF_FACTOR
        default: 3
        expression: '{{firecrawl.retry_backoff_factor}}'
      - name: FIRECRAWL_CREDIT_WARNING_THRESHOLD
        default: 2000
        expression: '{{firecrawl.credit_warning_threshold}}'
      - name: FIRECRAWL_CREDIT_CRITICAL_THRESHOLD
        default: 500
        expression: '{{firecrawl.credit_critical_threshold}}'
    parameters:
      type: object
      properties:
        credit_critical_threshold:
          type: integer
        credit_warning_threshold:
          type: integer
        retry_backoff_factor:
          type: integer
        retry_delay:
          type: integer
        retry_max:
          type: integer
        retry_max_delay:
          type: integer
        url:
          type: string

- name: flexprice
  image: mcp/flexprice@sha256:03317edc59485536374dc9057d6e796b255e571464f7a84bbd4f7afe6434e6a0
  run:
    workdir: /app
  config:
    description: Configure the connection to Redis
    secrets:
      - id: flexprice.api_key
        name: API_KEY
        value: your_api_key_here
    env:
      - name: BASE_URL
        default: https://api.cloud.flexprice.io
        expression: '{{flexprice.base_url}}'
    parameters:
      type: object
      properties:
        base_url:
          type: string

- name: github
  image: mcp/github@sha256:286d610c8ee441cb68aa9f044d8d719bb64e98937f604c6d233aa7898d2dbc5f
  run:
    workdir: /app
  config:
    secrets:
      - id: github.personal_access_token
        name: GITHUB_PERSONAL_ACCESS_TOKEN
        value: <YOUR_TOKEN>

- name: github-chat
  image: mcp/github-chat@sha256:f3700db496e33c1facee5ca1e2a4634edb216ce25d85b9c0e4959c0e4bc1a463
  run:
    workdir: /app
  config:
    secrets:
      - id: github-chat.api_key
        name: GITHUB_API_KEY
        value: YOUR_GITHUB_API_KEY

- name: github-official
  image: mcp/github-mcp-server@sha256:0fa271634de175b6633dd19fa68626cbc71e16251fd497f1500fbb4037de1348
  run:
    workdir: /server
  config:
    secrets:
      - id: github.personal_access_token
        name: GITHUB_PERSONAL_ACCESS_TOKEN
        value: <YOUR_TOKEN>

- name: gitlab
  image: mcp/gitlab@sha256:acd7bd5616b1611fd7a7a63328e1b7be34443df12c92940afe64e80a9d962c46
  run:
    workdir: /app
  config:
    description: Configure the local or Cloud GitLab instance
    secrets:
      - id: gitlab.personal_access_token
        name: GITLAB_PERSONAL_ACCESS_TOKEN
        value: <YOUR_TOKEN>
    env:
      - name: GITLAB_API_URL
        default: https://gitlab.com/api/v4
        expression: '{{gitlab.url|safe}}'
    parameters:
      type: object
      properties:
        url:
          type: string
          description: api url - optional for self-hosted instances

- name: glif
  image: mcp/glif@sha256:592653a2179eeb9056c54ea010bd98e1fd57147b21b46d3305aa5ee0d20e9eb0
  run:
    workdir: /app
  config:
    description: Configure the connection to glif.app
    secrets:
      - id: glif.api_token
        name: GLIF_API_TOKEN
        value: your-token-here
    env:
      - name: GLIF_IDS
        default: ""
        expression: '{{glif.ids}}'
      - name: IGNORE_SAVED_GLIFS
        default: false
        expression: '{{glif.ignored_saved}}'
    parameters:
      type: object
      properties:
        ids:
          type: string
        ignored_saved:
          type: boolean

- name: google-maps
  image: mcp/google-maps@sha256:631bee4b5108bead5072a170a6281cc572e991033d9d893477c3fe5a325994c0
  run:
    workdir: /app
  config:
    secrets:
      - id: google-maps.api_key
        name: GOOGLE_MAPS_API_KEY
        value: <YOUR_API_KEY>

- name: grafana
  image: mcp/grafana@sha256:58da81a1324e82e70e0ec91d2f0c3f23a59d23529552dbe4c662e61ab4d7f1b7
  run:
    workdir: /app
    command:
      - --transport=stdio
  config:
    description: Configure the connection to Grafana
    secrets:
      - id: grafana.api_key
        name: GRAFANA_API_KEY
        value: <your service account token>
    env:
      - name: GRAFANA_URL
        default: http://localhost:3000
        expression: '{{grafana.url|safe}}'
    parameters:
      type: object
      properties:
        url:
          type: string

- name: gyazo
  image: mcp/gyazo@sha256:e6b3366268cd2a16a053cf671c449649a7e03a7cdcbb40a64d0fbabe9eff964b
  run:
    workdir: /app
  config:
    secrets:
      - id: gyazo.access_token
        name: GYAZO_ACCESS_TOKEN
        value: your-access-token-here

- name: hackle
  image: mcp/hackle@sha256:d4495075b7cc3d251a1fef592687286e99fc81301db854d04679f024aa8704e7
  run:
    workdir: /usr/src/app
  config:
    secrets:
      - id: hackle.api_key
        name: API_KEY
        value: YOUR_API_KEY

- name: handwriting-ocr
  image: mcp/handwriting-ocr@sha256:1c100a0eae5b38765bce9c2f4094e40bf60be83310733b6767b1c397bacd9fc6
  run:
    workdir: /app
  config:
    secrets:
      - id: handwriting-ocr.api_token
        name: API_TOKEN
        value: your-api-token

- name: heroku
  image: mcp/heroku@sha256:031529ad71ae97f45fe10c4e420871b386991f44e1e012417df8e4e62fefa96b
  run:
    workdir: /app
  config:
    secrets:
      - id: heroku.api_key
        name: HEROKU_API_KEY
        value: <YOUR_HEROKU_AUTH_TOKEN>

- name: husqvarna-automower
  image: mcp/husqvarna-automower@sha256:4bed17348dab2827a6f9354d42db86076b9cbd61c62e1d0dbc36d9f98abadb11
  run:
    workdir: /app
  config:
    description: Configure the connection to Husqvarna Automower
    secrets:
      - id: husqvarna.client.secret
        name: HUSQVARNA_CLIENT_SECRET
        value: YOUR_CLIENT_SECRET_HERE
    env:
      - name: HUSQVARNA_CLIENT_ID
        default: YOUR_CLIENT_ID_HERE
        expression: '{{husqvarna-automower.client_id}}'
    parameters:
      type: object
      properties:
        client_id:
          type: string

- name: hyperbrowser
  image: mcp/hyperbrowser@sha256:1b6eaa91e795a9603def975baf70121bef61f4e46c03a363c85724335f800eae
  run:
    workdir: /usr/src/app
  config:
    description: Configure the connection to Hyperbrowser
    secrets:
      - id: hyperbrowser.api_key
        name: HYPERBROWSER_API_KEY
        value: <app or user token>

- name: hyperspell
  image: mcp/hyperspell@sha256:1e44361035e6006e0d491363fb491c69e346235438ab46e2f7a0142144aff550
  run:
    workdir: /app
  config:
    description: Configure the connection to Hyperspell
    secrets:
      - id: hyperspell.token
        name: HYPERSPELL_TOKEN
        value: <app or user token>
    env:
      - name: USE_RESOURCES
        default: false
        expression: '{{hyperspell.use_resources}}'
      - name: HYPERSPELL_COLLECTION
        default: ""
        expression: '{{hyperspell.collection}}'
    parameters:
      type: object
      properties:
        collection:
          type: string
        use_resources:
          type: boolean

- name: iaptic
  image: mcp/iaptic@sha256:03cffe683e314a8802a4885c460f7c1cc44894f619e33ce1388b6edd4dbbb917
  run:
    workdir: /app
  config:
    description: Configure the connection to iaptic
    secrets:
      - id: iaptic.api_key
        name: IAPTIC_API_KEY
        value: your-api-key-here
    env:
      - name: IAPTIC_APP_NAME
        default: your-app-name-here
        expression: '{{iaptic.app_name}}'
    parameters:
      type: object
      properties:
        app_name:
          type: string
      required:
        - app_name

- name: jetbrains
  image: mcp/jetbrains@sha256:bcb7c571e2151ec3d23ab106ef581af53ec69d7d315f738b13dc09e883123e11
  config:
    description: Configure the connection to the IDE
    env:
      - name: IDE_PORT
        default: 8090
        expression: '{{jetbrains.port}}'
    parameters:
      type: object
      properties:
        port:
          type: integer

- name: kagisearch
  image: mcp/kagisearch@sha256:6de7ef4b0712f6657099d68d48e09ec7ddecf3f9c9881aba8a5622ac9b7d7605
  run:
    workdir: /app
  config:
    description: Configure the connection to Kagi search
    secrets:
      - id: kagisearch.api_key
        name: KAGI_API_KEY
        value: YOUR_API_KEY_HERE
    env:
      - name: KAGI_SUMMARIZER_ENGINE
        default: cecil
        expression: '{{kagisearch.engine}}'
    parameters:
      type: object
      properties:
        engine:
          type: string

- name: kong
  image: mcp/kong@sha256:f38478ce8c37153ca5921375b02632d6387e8cd2484a644250634af9c56b070f
  run:
    workdir: /app
  config:
    description: Configure the connection to Kong Konnect
    secrets:
      - id: kong.access_token
        name: KONNECT_ACCESS_TOKEN
        value: kpat_api_key_here
    env:
      - name: KONNECT_REGION
        default: us
        expression: '{{kong.region}}'
    parameters:
      type: object
      properties:
        region:
          type: string

- name: kubernetes
  image: mcp/kubernetes@sha256:b73594d7ec4093c63b940a1a7aa266fb1aa25962fbb9b512e62921fe58ec17d2
  run:
    workdir: /usr/local/app

- name: lara
  image: mcp/lara@sha256:2c2f2d5e02c9833c7cc498f93fc658a4efa046ad0c24b04d7b641b96e9dbeac6
  run:
    workdir: /app
  config:
    description: Configure the connection to Lara Translate
    secrets:
      - id: lara.key_secret
        name: LARA_ACCESS_KEY_SECRET
        value: YOUR_LARA_ACCESS_KEY_SECRET
    env:
      - name: LARA_ACCESS_KEY_ID
        default: YOUR_LARA_ACCESS_KEY_ID
        expression: '{{lara.key_id}}'
    parameters:
      type: object
      properties:
        key_id:
          type: string
      required:
        - key_id

- name: line
  image: mcp/line@sha256:7794d6db2bec4972bb3899b759e9fb8c174f523a92f10d3018e0bf55ccb20bd6
  run:
    workdir: /app
  config:
    description: Configure the connection to LINE
    secrets:
      - id: line.access_token
        name: CHANNEL_ACCESS_TOKEN
        value: FILL_HERE
    env:
      - name: DESTINATION_USER_ID
        default: FILL_HERE
        expression: '{{line.user_id}}'
    parameters:
      type: object
      properties:
        user_id:
          type: string
      required:
        - user_id

- name: mcp-discord
  image: mcp/mcp-discord@sha256:e684ef1ed7e027d0f8669105e8fe376859c1623b5346a168d81143a211f1dc01
  run:
    workdir: /app
  config:
    secrets:
      - id: discord.token
        name: DISCORD_TOKEN
        value: YOUR_DISCORD_TOKEN

- name: mongodb
  image: mcp/mongodb@sha256:074da00b4285ffb4dd96c9f9bd5386812cdffd40815947f239516b7c802798e8
  config:
    description: Configure the connection to MongoDB
    secrets:
      - id: mongodb.connection_string
        name: MDB_MCP_CONNECTION_STRING
        value: mongodb+srv://username:password@cluster.mongodb.net/myDatabase

- name: multiversx-mx
  image: mcp/multiversx-mx@sha256:36f692d9f1a52ccd739e23a9c07b5fba6bbdc0a5741045a6920c550edeb5ae02
  run:
    workdir: /app
  config:
    description: Configure the connection to MultiversX blockchain
    env:
      - name: MVX_NETWORK
        default: devnet
        expression: '{{multiversx-mx.network}}'
      - name: MVX_WALLET
        default: absolute/path/to/someWallet.pem
        expression: '{{multiversx-mx.wallet}}'
    parameters:
      type: object
      properties:
        network:
          type: string
        wallet:
          type: string
      required:
        - network
        - wallet

- name: neo4j-cloud-aura-api
  image: mcp/neo4j-cloud-aura-api@sha256:38d7e8c9da7194b96e2b396617467c5cbe5ebbcc3e3db7f27de647e280c2c450
  run:
    workdir: /app
  config:
    description: Configure the connection to Neo4j Aura
    secrets:
      - id: neo4j.password
        name: NEO4J_AURA_CLIENT_SECRET
        value: <your-client-secret>
    env:
      - name: NEO4J_AURA_CLIENT_ID
        default: <your-client-id>
        expression: '{{neo4j-cloud-aura-api.client_id}}'
    parameters:
      type: object
      properties:
        client_id:
          type: string
      required:
        - client_id

- name: neo4j-cypher
  image: mcp/neo4j-cypher@sha256:4fe8f4d4c05eea3d1f19eae26dfdb215c584be95c0858dde3e9306374c40c4a8
  run:
    workdir: /app
  config:
    description: Configure the connection to Neo4j
    secrets:
      - id: neo4j.password
        name: NEO4J_PASSWORD
        value: password
    env:
      - name: NEO4J_URL
        default: bolt://host.docker.internal:7687
        expression: '{{neo4j-cypher.url}}'
      - name: NEO4J_USERNAME
        default: neo4j
        expression: '{{neo4j-cypher.username}}'
    parameters:
      type: object
      properties:
        url:
          type: string
        username:
          type: string
      required:
        - url
        - username

- name: neo4j-memory
  image: mcp/neo4j-memory@sha256:9c561b9900f1688020dcfdc0ae84ca7213eb8426776a887e2a612128699a9d2a
  run:
    workdir: /app
  config:
    description: Configure the connection to Neo4j
    secrets:
      - id: neo4j.password
        name: NEO4J_PASSWORD
        value: password
    env:
      - name: NEO4J_URL
        default: bolt://host.docker.internal:7687
        expression: '{{neo4j-memory.url}}'
      - name: NEO4J_USERNAME
        default: neo4j
        expression: '{{neo4j-memory.username}}'
    parameters:
      type: object
      properties:
        url:
          type: string
        username:
          type: string
      required:
        - url
        - username

- name: neon
  image: mcp/neon@sha256:a7d9856d23aac5570ec2cf5df3574798e8762875b27238318b71a035c511506d
  run:
    workdir: /app
  config:
    secrets:
      - id: neon.api_key
        name: NEON_API_KEY
        value: YOUR_API_KEY_HERE

- name: node-code-sandbox
  image: mcp/node-code-sandbox@sha256:532fc9574177ae840b26f8c37f97ded8e7a3d1372cbeac5d8959f3413a62d1c3
  run:
    workdir: /app

- name: notion
  image: mcp/notion@sha256:8858d1e16d640753853eebb475be8acf72bffffa6150eb9ab7f31a7ce97fdc29
  run:
    env:
      OPENAPI_MCP_HEADERS: '"{\"Authorization\": \"Bearer $INTERNAL_INTEGRATION_TOKEN\", \"Notion-Version\": \"2022-06-28\"}"'
  config:
    secrets:
      - id: notion.internal_integration_token
        name: INTERNAL_INTEGRATION_TOKEN
        value: ntn_****

- name: obsidian
  image: mcp/obsidian@sha256:96d5209572aeab121da3e49842fc3b1cd4e6bddb2bda2009d2dd4ffad96b9d2e
  run:
    workdir: /app
  config:
    description: Configure the connection to Obsidian
    secrets:
      - id: obsidian.api_key
        name: OBSIDIAN_API_KEY
        value: YOUR_OBSIDIAN_API_KEY
    env:
      - name: OBSIDIAN_HOST
        default: host.docker.internal
        expression: host.docker.internal

- name: openapi-schema
  image: mcp/openapi-schema@sha256:230f344fcf6d998d533bdcf377e4268d1ff8b84b2d168b564d5c9944fafab819
  run:
    workdir: /app
    volumes:
      - '{{openApiSchemaPath|or:[]|volume|into}}'

- name: opik
  image: mcp/opik@sha256:af64778ea57939084520bc28f8df84bdc64717601fdef910ef6f0851e535a776
  run:
    workdir: /app
  config:
    description: Configure the connection to Opik
    secrets:
      - id: opik.api_key
        name: OPIK_API_KEY
        value: your_api_key
    env:
      - name: OPIK_API_BASE_URL
        default: https://www.comet.com/opik/api
        expression: '{{opik.api_base_url|safe}}'
      - name: OPIK_WORKSPACE_NAME
        default: default
        expression: '{{opik.workspace_name}}'
    parameters:
      type: object
      properties:
        api_base_url:
          type: string
        workspace_name:
          type: string

- name: osp_marketing_tools
  image: mcp/osp_marketing_tools@sha256:9130d6e9057eec344174f4afc9541cbcc52aed272bf62aab9d5d08c67e03ddf6
  run:
    workdir: /app

- name: oxylabs
  image: mcp/oxylabs@sha256:4aded83d191c40bda072bc59d7669e287c375d2f4b32e72c535caed7bc3fc5cb
  run:
    workdir: /app
  config:
    description: Configure the connection to Oxylabs Scraper
    secrets:
      - id: oxylabs.password
        name: OXYLABS_PASSWORD
        value: YOUR_PASSWORD_HERE
    env:
      - name: OXYLABS_USERNAME
        default: YOUR_USERNAME_HERE
        expression: '{{oxylabs.username}}'
    parameters:
      type: object
      properties:
        username:
          type: string
      required:
        - username

- name: perplexity-ask
  image: mcp/perplexity-ask@sha256:48dd8d8e2468e2ca74ac09d6f68953707a9d66766e774ef1962131126e8de6d0
  run:
    workdir: /app
  config:
    description: Configure the connection to Perplexity
    secrets:
      - id: perplexity-ask.api_key
        name: PERPLEXITY_API_KEY
        value: YOUR_PERPLEXITY_API_KEY

- name: playwright
  image: mcp/playwright@sha256:ed8d080f0cdf967d10520b2a387d14d110864fbc0bbf7d4325b3b1e0db967b1d
  run:
    workdir: /app

- name: postgres
  image: mcp/postgres@sha256:ce7fbae69bff8b397fe0814754b4724ced79d3d547f225b69a5200f92e76d928
  run:
    workdir: /app
    command:
      - $POSTGRES_URL
  config:
    secrets:
      - id: postgres.url
        name: POSTGRES_URL
        value: postgresql://host.docker.internal:5432/mydb

- name: pulumi
  image: mcp/pulumi@sha256:f5f12d289ef7dc9726b4452ba0bde8ec0d3bcdd9307c225c835adba9c286a110
  run:
    workdir: /app

- name: puppeteer
  image: mcp/puppeteer@sha256:6891e0df5658ca8877f94557250dd29167a03e245eb570f12505de8768d2b667
  run:
    workdir: /project
  config:
    description: The MCP server is allowed to access these paths
    env:
      - name: DOCKER_CONTAINER
        default: "true"
        expression: "true"

- name: razorpay
  image: mcp/razorpay@sha256:741d4090842fd4d8f9cafef1ff9093fea0feb80344a42a58f109868888754274
  run:
    workdir: /app
  config:
    description: Configure the connection to Razorpay
    secrets:
      - id: razorpay.key_secret
        name: RAZORPAY_KEY_SECRET
        value: your_razorpay_key_secret
    env:
      - name: RAZORPAY_KEY_ID
        default: your_razorpay_key_id
        expression: '{{razorpay.key_id}}'
    parameters:
      type: object
      properties:
        key_id:
          type: string
      required:
        - key_id

- name: redis
  image: mcp/redis@sha256:e2052a34fcc3b10f920cf451062bfd6779858f79c1bdc60345feb981e16a3cbb
  run:
    workdir: /app
  config:
    description: Configure the connection to Redis
    secrets:
      - id: redis.password
        name: REDIS_PWD
        value: ""
    env:
      - name: REDIS_HOST
        default: 127.0.0.1
        expression: '{{redis.host}}'
      - name: REDIS_PORT
        default: "6379"
        expression: '{{redis.port}}'
      - name: REDIS_USERNAME
        default: default
        expression: '{{redis.username}}'
      - name: REDIS_SSL
        default: "False"
        expression: '{{redis.ssl}}'
      - name: REDIS_CA_PATH
        default: ""
        expression: '{{redis.ca_path}}'
      - name: REDIS_SSL_KEYFILE
        default: ""
        expression: '{{redis.ssl_keyfile}}'
      - name: REDIS_SSL_CERTFILE
        default: ""
        expression: '{{redis.ssl_certfile}}'
      - name: REDIS_CERT_REQS
        default: required
        expression: '{{redis.cert_reqs}}'
      - name: REDIS_CA_CERTS
        default: ""
        expression: '{{redis.ca_certs}}'
      - name: REDIS_CLUSTER_MODE
        default: "False"
        expression: '{{redis.cluster_mode}}'
    parameters:
      type: object
      properties:
        host:
          type: string
        port:
          type: integer
        username:
          type: string
        ssl:
          type: boolean
        ca_path:
          type: string
        ssl_keyfile:
          type: string
        ssl_certfile:
          type: string
        cert_reqs:
          type: string
        ca_certs:
          type: string
        cluster_mode:
          type: boolean

- name: redis-cloud
  image: mcp/redis-cloud@sha256:737c8243b59c7588ff1d54dafeea97f9657673c31c297cc3bb57156c8b81ff66
  run:
    workdir: /app
  config:
    description: Configure the connection to Redis Cloud
    secrets:
      - id: redis-cloud.secret_key
        name: SECRET_KEY
        value: <redis_cloud_api_secret_key>
    env:
      - name: API_KEY
        default: <redis_cloud_api_key>
        expression: '{{redis-cloud.api_key}}'
    parameters:
      type: object
      properties:
        api_key:
          type: string
      required:
        - api_key

- name: resend
  image: mcp/resend@sha256:e2e56bdeb0a195b5dfbb8ed8e1445119cd91f49193ade7fece85e3ac75820404
  run:
    workdir: /app
  config:
    description: Configure sender and reply email addresses
    secrets:
      - id: resend.api_key
        name: RESEND_API_KEY
        value: YOUR_RESEND_API_KEY
    env:
      - name: REPLY_TO_EMAIL_ADDRESSES
        default: YOUR_REPLY_TO_EMAIL_ADDRESSES
        expression: '{{resend.reply_to}}'
      - name: SENDER_EMAIL_ADDRESS
        default: YOUR_SENDER_EMAIL_ADDRESS
        expression: '{{resend.sender}}'
    parameters:
      type: object
      properties:
        reply_to:
          type: string
          description: comma separated list of reply to email addresses
        sender:
          type: string
          description: sender email address
      required:
        - reply_to
        - sender

- name: risken
  image: mcp/risken@sha256:f3dff44ffa05d938926c1988f2ca495ed510d7b17b0fac62d31ec14dda3985e5
  run:
    command:
      - stdio
  config:
    description: Configure the connection to Risken
    secrets:
      - id: risken.access_key
        name: RISKEN_ACCESS_TOKEN
        value: your_access_token
    env:
      - name: RISKEN_URL
        default: http://localhost:8000
        expression: '{{risken.url|safe}}'
    parameters:
      type: object
      properties:
        url:
          type: string

- name: scrapegraph
  image: mcp/scrapegraph@sha256:b0bd249caeebb2092ce984a1232de0cbb9f0a7fad15dd98b9801d11523dc36de
  run:
    workdir: /app
  config:
    secrets:
      - id: scrapegraph.api_key
        name: SGAI_API_KEY
        value: YOUR_SGAI_API_KEY

- name: scrapezy
  image: mcp/scrapezy@sha256:ee2119932ac2a4fa599e58aed1fe69abe7fd7fcc851be9a6fc9c8f2727dd09dd
  run:
    workdir: /app
  config:
    secrets:
      - id: scrapezy.auth_token
        name: SCRAPEZY_API_KEY
        value: your_api_key

- name: sentry
  image: mcp/sentry@sha256:ede41a90f21fdd23b77da71ff7a41a58113b44818bf0217a9e549f7580ec93f3
  run:
    workdir: /app
    command:
      - --auth-token
      - $SENTRY_AUTH_TOKEN
  config:
    secrets:
      - id: sentry.auth_token
        name: SENTRY_AUTH_TOKEN
        value: YOUR_SENTRY_TOKEN

- name: shopify
  image: mcp/shopify@sha256:95adf2cd73360b2f467463074e5c52e6fffd7fdb9e50fc959fa09e9c9bf09216
  run:
    workdir: /app

- name: slack
  image: mcp/slack@sha256:bc65ec0e4a475563a65b28752d2eef036a2de6d2b914a757a2d78005f6d04e0b
  run:
    workdir: /app
  config:
    description: Configure the connection to Slack
    secrets:
      - id: slack.bot_token
        name: SLACK_BOT_TOKEN
        value: xoxb-your-bot-token
    env:
      - name: SLACK_TEAM_ID
        default: T01234567
        expression: '{{slack.team_id}}'
      - name: SLACK_CHANNEL_IDS
        default: C01234567, C76543210
        expression: '{{slack.channel_ids}}'
    parameters:
      type: object
      properties:
        team_id:
          type: string
        channel_ids:
          type: string
      required:
        - team_id

- name: smithery-cli
  image: mcp/smithery-cli@sha256:d1d61179c9bc86fde03f406fce6e9e71ba635843aa4f62ac3fa59da283fed85b
  run:
    workdir: /app
  config:
    secrets:
      - id: smithery-cli.api_key
        name: SMITHERY_API_KEY
        value: your_api_key_here

- name: stripe
  image: mcp/stripe@sha256:83f294637a47ced767ef1770c899b05558bec115d3a8852aef5bbe1eee8e9a42
  run:
    workdir: /app
    command:
      - --tools=all
  config:
    secrets:
      - id: stripe.secret_key
        name: STRIPE_SECRET_KEY
        value: sk_STRIPE_SECRET_KEY

- name: tavily
  image: mcp/tavily@sha256:962f7700cf168cc99a170f52e7e707b983935b939ce3043bf7466e1278fd190f
  run:
    workdir: /app
  config:
    secrets:
      - id: tavily.api_token
        name: TAVILY_API_KEY
        value: your-tavily-apikey-here

- name: tembo
  image: mcp/tembo@sha256:178ea1dae888ff7ef335ef246cddea531c2177c4ec41442e7e056f4b99a78e6e
  run:
    workdir: /app
  config:
    secrets:
      - id: tembo.api_token
        name: TEMBO_API_KEY
        value: your-tembo-apikey-here

- name: time
  image: mcp/time@sha256:727d8c52bd99b23a37cc0f763008eba06690cb022f538eeb9bbfa1aa52d427fe
  run:
    workdir: /app

- name: triplewhale
  image: mcp/triplewhale@sha256:0d4702dce52759833481d5c6ae50848309608eb1448c8a13eeba04226461519a
  run:
    workdir: /app
  config:
    secrets:
      - id: triplewhale.api_key
        name: TRIPLEWHALE_API_KEY
        value: your-triplewhale-api-key-here

- name: tweetbinder
  image: mcp/tweetbinder@sha256:f9ae0228aebe8f8e09a5c817ebaab31b9460454e4c78c64593967790521f3d36
  run:
    workdir: /app
  config:
    secrets:
      - id: tweetbinder.api_token
        name: TWEETBINDER_API_TOKEN
        value: your-bearer-token-here

- name: veyrax
  image: mcp/veyrax@sha256:257d915330722bc84dbeec0a709a2e7edf9ba83b268799d075dad5cbb53d62b7
  run:
    workdir: /app
  config:
    secrets:
      - id: veyrax.api_key
        name: VEYRAX_API_KEY
        value: your-veyrax-api-key-here

- name: webflow
  image: mcp/webflow@sha256:20e73bbc57ed58fa4396eefb0e0ee7f2a60c4121521765ffb40d70da60850f13
  run:
    workdir: /app
  config:
    secrets:
      - id: webflow.token
        name: WEBFLOW_TOKEN
        value: your_api_token

- name: wikipedia-mcp
  image: mcp/wikipedia-mcp@sha256:c950555bce61cc28cf607530dc235f63ca0dbe175cf5a09b73073afe84a1371d

- name: wolfram-alpha
  image: mcp/wolfram-alpha@sha256:bfd7f6fff7d195fa9531c513a9c3346333f95767f67fe16d81541120670956f8
  config:
    secrets:
      - id: wolfram-alpha.api_key
        name: WOLFRAM_API_KEY
        value: your-app-id

- name: youtube_transcript
  image: mcp/youtube-transcript@sha256:36d8842ec248ee600dcb908bea7f6156a238e02112bd6b1ffc36b58c2be806db
  run:
    workdir: /app