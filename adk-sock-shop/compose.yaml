services:

  adk-ui:
    build:
      context: .
      file: Dockerfile.adk-ui
    ports:
      - 3000:3000
    depends_on:
      - adk
    profiles: [prod]

  adk:
    build:
      context: .
    ports:
      # expose port for web interface
      - 8080:8080
    environment:
      # point adk at the MCP gateway
      - MCPGATEWAY_ENDPOINT=http://mcp-gateway:8811/sse
    depends_on:
      - mcp-gateway
    profiles: [prod]
    models:
      gemma3 :
        endpoint_var: MODEL_RUNNER_URL
        model_var: MODEL_RUNNER_MODEL

  mcp-gateway:
    # mcp-gateway secures your MCP servers
    image: docker/mcp-gateway:latest
    ports:
      - 8811:8811
    use_api_socket: true
    volumes:
      - /Users/slim/.docker/mcp/catalogs:/app/catalogs
      - /Users/slim/.docker/mcp/config.yaml:/app/config.yaml
    command:
      - --transport=sse
      - --servers=fetch,brave,mongodb,resend,curl
      - --catalog=/app/catalogs/docker-mcp.yaml
      - --config=/mcp_config
      - --verbose
    configs:
      - mcp_config
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb_data:/data/db
    command: ["mongod", "--quiet", "--logpath", "/var/log/mongodb/mongod.log", "--logappend", "--setParameter", "logComponentVerbosity={network:{verbosity:0}}"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

models:
  gemma3:
    # pre-pull the model when starting Docker Model Runner
    model: ai/gemma3:4B-Q4_0
    context_size: 10000 # 3.5 GB VRAM
    # increase context size to handle search results
    # context_size: 131000 # 7.6 GB VRAM

volumes:
  mongodb_data:

configs:
  mcp_config:
    content: |
      resend:
        reply_to: slimslenderslacks@gmail.com
        sender: slimslenderslacks@slimslenderslacks.com
